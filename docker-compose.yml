# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.3'

# Define services
services:

 # service-config 
  service-config:
    build: 
      context: service-config
      dockerfile: Dockerfile     
    ports: 
     - "8888:8888" 
    environment:
     - SERVER_PORT=8888
     - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/GuiziguizA/Projet12-config.git
     - SPRING_CLOUD_CONFIG_USERNAME=GuiziguizA
     - SPRING_CLOUD_CONFIG_PASSWORD=tarot1994  

  # service-register
  service-register :
    build: 
      context: service-register
      dockerfile: Dockerfile 
    ports:
      - "8761:8761" 
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://service-config:8888/
      - SERVER_PORT=8761
     

     # service-creneaux_requetes
  service-creneaux_requetes :
    depends_on: 
      - database1
    restart: always
    build: 
      context: service-creneaux_requetes
      dockerfile: Dockerfile 
    ports:
      - "8074:8074"
      
    environment:
     - spring.cloud.config.uri=http://192.168.99.100:8888/
    #Database
     - spring.datasource.url=jdbc:mysql://database1:3306/creneaux&requetes
     - spring.datasource.username = guimiom
     - spring.datasource.password = guimiom
    
  #Mysql Database user&competence
  database_user_competence:
        container_name: database_user_competence
        image: "mysql:5.6.51"
        
        ports: 
            - "3306:3306"
        environment:
            MYSQL_DATABASE: user_competence
            MYSQL_USER: guimiom
            MYSQL_PASSWORD: guimiom
            MYSQL_ROOT_PASSWORD: guimiom
        entrypoint:
          sh -c "
          echo 'CREATE DATABASE IF NOT EXISTS user_competence;' > /docker-entrypoint-initdb.d/init.sql;
          /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
        volumes:
           - ./mysql_data_userCommpetence:/var/lib/mysql
   
           
  database1:
        container_name: database1
        image: "mysql:5.6.51"
        
        ports: 
            - "3306:3306"
        environment:
            MYSQL_DATABASE: creneaux&requetes
            MYSQL_USER: guimiom
            MYSQL_PASSWORD: guimiom
            MYSQL_ROOT_PASSWORD: guimiom
            
   

  database2:
        container_name: database2
        image: "mysql:5.6.51"
        
        ports: 
            - "3308:3306"
        environment:
            MYSQL_DATABASE: chat&batch
            MYSQL_USER: guimiom
            MYSQL_PASSWORD: guimiom
            MYSQL_ROOT_PASSWORD: guimiom
          
 
          

# service-proxy 
  service-proxy:
    build: 
      context: service-proxy
      dockerfile: Dockerfile
    ports: 
     - "8089:8089"
    environment:
      - serviceUrl='http://192.168.99.100:8761/eureka/
# service-user_competence
  service-user_competence:
    depends_on: 
      - database_user_competence
    restart: always
    build: 
      context: service-user_competence
      dockerfile: Dockerfile
    ports: 
     - "8082:8082"
    environment:
     - SPRING_CLOUD_CONFIG_URI=http://service-config:8888/
    
     - SERVER_PORT=8082
    #Database
     - SPRING_DATASOURCE_URL=jdbc:mysql://database_user_competence:3306/user&competence
     - SPRING_DATASOURCE_USERNAME = guimiom
     - SPRING_DATASOURCE_PASSWORD  = guimiom
      
    
# service-chats_batch
  service-chats_batch:
    depends_on: 
      - database2
    restart: always
    build: 
      context: service-chats_batch
      dockerfile: Dockerfile
    ports: 
     - "8234:8234"
    environment:
      - spring.cloud.config.uri=http://192.168.99.100:8888/
      - spring.application.name=compagny-chat_batch
      - server.port=8234
    #Database
      - spring.datasource.url=jdbc:mysql://database2:3306/chat&batch
      - spring.datasource.username = guimiom
      - spring.datasource.password = guimiom
     