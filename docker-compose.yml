# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.3'

# Define services
services:

 # service-config 
  service-config:
    build: 
      context: service-config
      dockerfile: Dockerfile     
    ports: 
     - "8888:8888" 
    environment:
     - server.port=8888
     - spring.cloud.config.server.git.uri=https://github.com/GuiziguizA/Projet12-config.git
     - spring.cloud.config.username=GuiziguizA
     - spring.cloud.config.password=tarot1994  

  # service-register
  service-register :
    build: 
      context: service-register
      dockerfile: Dockerfile 
    ports:
      - "8761:8761" 
    environment:
      - spring.cloud.config.uri=http://192.168.99.100:8888/
      - spring.application.name=eureka-service
      - server.port=8761
     

     # service-creneaux_requetes
  service-creneaux_requetes :
  
    build: 
      context: service-creneaux_requetes
      dockerfile: Dockerfile 
    ports:
      - "8074:8074"
    environment:
    #Database
     - spring.datasource.url=jdbc:mysql://localhost:3306/creneaux&requetes
     - spring.datasource.username = root
     - spring.datasource.password = 
  #Mysql Database
  database:
        image: mysql
        ports: 
            - "3306:3306"
        environment:
            MYSQL_DATABASE: user&competence
            MYSQL_USER: root
            MYSQL_PASSWORD:
            MYSQL_ROOT_PASSWORD: 
        


# service-proxy 
  service-proxy:
    build: 
      context: service-proxy
      dockerfile: Dockerfile
    ports: 
     - "8089:8089"
    environment:
      - serviceUrl='http://192.168.99.100:8761/eureka/
# service-user_competence
  service-user_competence:
    build: 
      context: service-user_competence
      dockerfile: Dockerfile
    ports: 
     - "8082:8082"
    environment:
     - spring.cloud.config.uri=http://192.168.99.100:8888/
     - spring.application.name=compagny-user_competence
     - server.port=8082
    
    
# service-chats_batch
  service-chats_batch:
    build: 
      context: service-chats_batch
      dockerfile: Dockerfile
    ports: 
     - "8234:8234"
    environment:
      - spring.cloud.config.uri=http://192.168.99.100:8888/
      - spring.application.name=compagny-chat_batch
      - server.port=8234
